# Migration file for creating "image" for academic programs.
#
# Detailed explanations for various elements of a migration
# YAML have been provided in migrate_plus.migration.program_data.yml

id: teachers_images
label: Teacher Images
migration_group: teachers
migration_tags: {}
# Source.
source:
  plugin: csv
  path: modules/custom/custom_migrate/imports/teachers.csv
  header_row_count: 1
  # Unique ID.
  #
  # The source for images do not have any existing unique IDs. Hence,
  # we use the image name as unique IDs. This will ensure that every
  # image results in the creation of a unique file entity on the site.
  keys:
    - picture
  column_names:
    0:
      nid: nid
    1:
      path: Path
    2:
      title: Title
    3:
      description: Description
    4:
      about: Qualifications
    5:
      profile_ids: Profile IDs
    6:
      email: E-mail
    7:
      picture: Picture
  # Source field definitions.
  #fields:
  #  picture: Name of the image file associated.
  #  name: Name of the subject image.
  # Since we are writing YAML, we do not have ways to manipulate
  # fields like we do in PHP. However, we can use migration process
  # plugins. These plugins can use migration-specific "constants"
  # to generate file paths and URIs.
  #
  # Here, we define constants which we would use to generate file paths
  # and file names for program images.
  constants:
    file_source_uri: 'public://import/'
    file_dest_uri: 'public://teachers/image/'
# Destination.
destination:
  # We will be creating entities of type "file" this time.
  plugin: 'entity:file'
  source_path_property: '@file_source'
  destination_path_property: '@file_dest'
# Mappings.

process:
  file_source:
    -
      plugin: concat
      delimiter: /
      source:
        - constants/file_source_uri
        - picture
    # Make sure we don't have any url-unfriendly characters.
    -
      plugin: urlencode
  file_dest:
    -
      plugin: concat
      delimiter: /
      source:
        - constants/file_dest_uri
        - picture
    # Make sure we don't have any url-unfriendly characters.
    -
      plugin: urlencode
  # We use the image file names as is.
  #
  # Alternatively, if we wish to name them after some other
  # column, we can do it here.
  filename:
    -
      plugin: get
      source: picture
    -
      plugin: skip_on_empty
      method: row
  uri:
    plugin: file_copy
    source:
      - '@file_source'
      - '@file_dest'
  uid:
    plugin: default_value
    default_value: 1
